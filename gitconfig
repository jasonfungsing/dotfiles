[user]
	name = Jason Feng
	email = jason@foxlime.io
[github]
    user = jasonfungsing
[gitlab]
    user = jasonfungsing

[credential]
	helper = osxkeychain
[filter "lfs"]
    clean = git lfs clean %f
    smudge = git lfs smudge %f
    required = true
  	process = git-lfs filter-process
[core]
    excludesfile = ~/.gitignore_global
    ignorecase = false
	editor = vim

[mergetool "SublimeMerge"]
    cmd = smerge mergetool \"$BASE\" \"$REMOTE\" \"$LOCAL\" -o \"$MERGED\"
[mergetool "Kaleidoscope"]
    cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
    trustexitcode = true
[mergetool]
    keepBackup = false
    prompt = false
[merge]
	tool = Kaleidoscope
	conflictstyle = diff3

[difftool "Kaleidoscope"]
    cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"
[difftool "SublimeMerge"]
    cmd = smerge mergetool \"$LOCAL\" \"$REMOTE\" -o \"$MERGED\"
[difftool]
    prompt = false
[diff]
    tool = Kaleidoscope
    algorithm = patience

[alias]
    dk=difftool
    dkc=difftool --cached
    mk=mergetool
    mkc=mergetool --cached

    ds=difftool --tool=SublimeMerge
    dsc=difftool --tool=SublimeMerge --cached
    ms=mergetool --tool=SublimeMerge
    msc=mergetool --tool=SublimeMerge --cached

    dv = difftool --tool=vimdiff
    dvc = difftool --tool=vimdiff --cached
    mv = mergetool --tool=vimdiff
    mvc = mergetool --tool=vimdiff --cached

    tree = log --oneline --branches --remotes --tags --graph --oneline --abbrev-commit --author-date-order --decorate --format=format:'%C(bold blue)%h%C(reset) %C(reset)%C(bold yellow)%d%C(reset) - %C(dim white)%aD (%ar)%C(reset)%n'' %C(bold cyan)%s%C(reset) %C(white)- %an%C(reset)%C(white) <%ae%C(reset)%C(white)>'
    cl = clone
    s = status
    co = checkout
    d = diff
    p = pull
    pa = pull --all
    ph = push
    aa = add --all
    f = fetch
    fa = fetch --all
    al = add --patch
    rbom = rebase origin/master
    c = commit
    cm = commit -m
    ca = commit --amend
    b = branch
    bd = branch -d
    bD = branch -D

    undo = reset --soft HEAD~1

    pr= "!f() { git fetch origin pull/$1/head:pr/$1 && git checkout pr/$1; }; f"
    cleanup = "!git fetch -p origin && git branch -vv | awk '/: gone]/{print $1}' | xargs git branch -D"

[push]
    default = simple
	autoSetupRemote = true
[hub]
	protocol = https
[http]
	sslVerify = false
[pull]
	ff = only
    rebase = true
[rebase]
    instructionFormat = "[%an - %ar] %s"
    autoStash = true
[init]
	defaultBranch = main
